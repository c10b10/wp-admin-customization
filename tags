!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AC_Core	core.php	/^class AC_Core {$/;"	c
AC_Settings	admin/admin.php	/^class AC_Settings extends scbBoxesPage {$/;"	c
__call	scb/AdminPage.php	/^	function __call( $method, $args ) {$/;"	f
__construct	scb/AdminPage.php	/^	function __construct( $file, $options = NULL ) {$/;"	f
__construct	scb/BoxesPage.php	/^	function __construct( $file, $options = null ) {$/;"	f
__construct	scb/Cron.php	/^	function __construct( $file, $args ) {$/;"	f
__construct	scb/Options.php	/^	public function __construct( $key, $file, $defaults = array() ) {$/;"	f
__construct	scb/Table.php	/^	function __construct( $name, $file, $columns, $upgrade_method = 'dbDelta' ) {$/;"	f
__get	scb/Options.php	/^	function __get( $field ) {$/;"	f
__isset	scb/Options.php	/^	function __isset( $field ) {$/;"	f
__set	scb/Options.php	/^	function __set( $field, $value ) {$/;"	f
_ac_init	admin-customization.php	/^function _ac_init() {$/;"	f
_action_link	scb/AdminPage.php	/^	function _action_link( $links ) {$/;"	f
_activation	scb/Options.php	/^	function _activation() {$/;"	f
_add_timing	scb/Cron.php	/^	function _add_timing( $schedules ) {$/;"	f
_boxes_js_init	scb/BoxesPage.php	/^	function _boxes_js_init() {$/;"	f
_callback_to_string	scb/Cron.php	/^	protected static function _callback_to_string( $callback ) {$/;"	f
_checkbox	scb/Forms.php	/^	private static function _checkbox( $args ) {$/;"	f
_checklist_wrap	admin/admin.php	/^	private function _checklist_wrap( $title, $tbody ) {$/;"	f
_clean	scb/Options.php	/^	private function _clean( $data ) {$/;"	f
_contextual_help	scb/AdminPage.php	/^	function _contextual_help( $help, $screen ) {$/;"	f
_do	scb/Hooks.php	/^	private static function _do( $action, $class ) {$/;"	f
_expand_values	scb/Forms.php	/^	private static function _expand_values( &$args ) {$/;"	f
_get	scb/Options.php	/^	private function &_get( $field, $data ) {$/;"	f
_get_unset_dashboard_widgets	core.php	/^	private function _get_unset_dashboard_widgets($disabled_widgets = array()) {$/;"	f
_increment	scb/BoxesPage.php	/^	private function _increment( $name ) {$/;"	f
_input	scb/Forms.php	/^	private static function _input( $args ) {$/;"	f
_input_gen	scb/Forms.php	/^	private static function _input_gen( $args ) {$/;"	f
_intermediate_callback	scb/BoxesPage.php	/^	function _intermediate_callback( $_, $box ) {$/;"	f
_multiple_choice	scb/Forms.php	/^	private static function _multiple_choice( $args ) {$/;"	f
_page_content_hook	scb/AdminPage.php	/^	function _page_content_hook() {$/;"	f
_pages_init	scb/AdminPage.php	/^	static function _pages_init() {$/;"	f
_print	scb/Hooks.php	/^	private static function _print( $tag, $callback, $prio, $argc ) {$/;"	f
_radio	scb/Forms.php	/^	private static function _radio( $args ) {$/;"	f
_scb_register	scb/Widget.php	/^	static function _scb_register() {$/;"	f
_select	scb/Forms.php	/^	private static function _select( $args ) {$/;"	f
_single_choice	scb/Forms.php	/^	private static function _single_choice( $args ) {$/;"	f
_widget_table	admin/admin.php	/^	private function _widget_table( $title, $widgets ) {$/;"	f
ac_admin_head_setup	core.php	/^    function ac_admin_head_setup() {$/;"	f
ac_dashboard_setup	core.php	/^	function ac_dashboard_setup() {$/;"	f
ac_login_head_setup	core.php	/^	function ac_login_head_setup() {$/;"	f
ac_login_title	core.php	/^	function ac_login_title() {$/;"	f
ac_login_url	core.php	/^	function ac_login_url() {$/;"	f
ac_redirect_on_logout	core.php	/^	function ac_redirect_on_logout($links) {$/;"	f
ac_remove_plugin_update_count	core.php	/^	function ac_remove_plugin_update_count() {$/;"	f
ac_remove_update_notices	core.php	/^	function ac_remove_update_notices()	{$/;"	f
action	scb/Forms.php	/^		$output .= wp_nonce_field( $action = $nonce, $name = "_wpnonce", $referer = true , $echo = false );$/;"	v
actual_help	scb/AdminPage.php	/^		$actual_help = $this->page_help();$/;"	v
add	scb/Hooks.php	/^	public static function add( $class ) {$/;"	f
add_activation_hook	scb/Util.php	/^	static function add_activation_hook( $plugin, $callback ) {$/;"	f
add_label	scb/Forms.php	/^	private static function add_label( $input, $desc, $desc_pos ) {$/;"	f
add_uninstall_hook	scb/Util.php	/^	static function add_uninstall_hook( $plugin, $callback ) {$/;"	f
adjusted_head_height	core.php	/^                $adjusted_head_height = max( $logo_size[1] + $margins[1] * 2, $font_size + $margins[1] * 2, 32 );$/;"	v
adjusted_head_height	core.php	/^                $adjusted_head_height = max( 16 + $margins[1] * 2, $font_size + $margins[1] * 2, 32 );$/;"	v
admin_msg	scb/AdminPage.php	/^	function admin_msg( $msg = '', $class = "updated" ) {$/;"	f
ajax_response	scb/AdminPage.php	/^	function ajax_response() {$/;"	f
ajax_submit	scb/AdminPage.php	/^	function ajax_submit() {$/;"	f
args	admin/admin.php	/^		$this->args = array($/;"	v
args	scb/AdminPage.php	/^		$this->args = wp_parse_args( $this->args, array($/;"	v
args	scb/AdminPage.php	/^	protected $args;$/;"	v
args	scb/BoxesPage.php	/^				$args = array();$/;"	v
args	scb/BoxesPage.php	/^			$args = isset( $box[4] ) ? $box[4] : array();$/;"	v
args	scb/Cron.php	/^			$args = $this->callback_args;$/;"	v
args	scb/Cron.php	/^	function do_now( $args = null ) {$/;"	v
args	scb/Forms.php	/^		$args = wp_parse_args( $args, array($/;"	v
args	scb/Util.php	/^	$args = func_get_args();$/;"	v
array_extract	scb/Util.php	/^	static function array_extract( $array, $keys ) {$/;"	f
array_map_recursive	scb/Util.php	/^	static function array_map_recursive( $callback, $array ) {$/;"	f
array_map_recursive_helper	scb/Util.php	/^	static function array_map_recursive_helper( &$val, $key, $callback ) {$/;"	f
array_pluck	scb/Util.php	/^	static function array_pluck( $array, $key ) {$/;"	f
array_to_sql	scb/Util.php	/^	static function array_to_sql( $values ) {$/;"	f
attributes	scb/Util.php	/^		$attributes = array_shift( $args );$/;"	v
boxes	admin/admin.php	/^		$this->boxes = array($/;"	v
boxes	scb/BoxesPage.php	/^	protected $boxes = array();$/;"	v
boxes_init	scb/BoxesPage.php	/^	function boxes_init() {$/;"	f
button_args	scb/AdminPage.php	/^			$button_args = array_slice( func_get_args(), 1 );$/;"	v
callback	scb/load.php	/^	static function init( $callback = '' ) {$/;"	v
callback	scb/load.php	/^function scb_init( $callback = '' ) {$/;"	v
callback_args	scb/Cron.php	/^			$this->callback_args = (array) $callback_args;$/;"	v
callback_args	scb/Cron.php	/^	protected $callback_args = array();$/;"	v
callbacks	scb/load.php	/^	private static $callbacks = array();$/;"	v
candidates	scb/load.php	/^	private static $candidates;$/;"	v
charset_collate	scb/Table.php	/^				$charset_collate = "DEFAULT CHARACTER SET $wpdb->charset";$/;"	v
charset_collate	scb/Table.php	/^		$charset_collate = '';$/;"	v
check_args	scb/AdminPage.php	/^	private function check_args() {$/;"	f
checkboxes	admin/admin.php	/^		$checkboxes = array($/;"	v
checkboxes	admin/admin.php	/^        $checkboxes = jQuery(this).closest('table').find('.check-column input[type="checkbox"]');$/;"	v
checked	scb/Forms.php	/^			$checked = self::get_cur_val( array() );$/;"	v
class	scb/AdminPage.php	/^		foreach ( self::$registered as $class => $args )$/;"	v
class	scb/Hooks.php	/^			$class = "'" . $callback[0] . "'";$/;"	v
class	scb/Hooks.php	/^			$class = '$' . get_class( $callback[0] );$/;"	v
classes	scb/load.php	/^	private static $classes;$/;"	v
clean	scb/Options.php	/^	public function update( $newdata, $clean = true ) {$/;"	v
cleanup	scb/Options.php	/^	public function cleanup() {$/;"	f
closing	scb/Util.php	/^		$closing = $tag;$/;"	v
columns	scb/Table.php	/^		$this->columns = $columns;$/;"	v
columns	scb/Table.php	/^	protected $columns;$/;"	v
comment	scb/Hooks.php	/^				$comment = $method->getDocComment();$/;"	v
content	scb/Util.php	/^		$content = str_replace( array( '"', "\\n" ), array( "'", '' ), ob_get_clean() );$/;"	v
content	scb/Util.php	/^	$content = implode( '', $args );$/;"	v
content	scb/Widget.php	/^	function content( $instance ) {}$/;"	f
context	core.php	/^			foreach ( $wp_meta_boxes['dashboard'] as $context => $data ) {$/;"	v
context	scb/BoxesPage.php	/^				$context = 'normal';$/;"	v
crons	scb/Cron.php	/^		$crons = _get_cron_array();$/;"	v
css_wrap	scb/AdminPage.php	/^	function css_wrap( $string ) {$/;"	f
cur_name	scb/Forms.php	/^	protected static $cur_name;$/;"	v
cur_val	scb/Forms.php	/^				'selected' => ( $cur_val == array( 'foo' ) ),$/;"	v
cur_val	scb/Forms.php	/^		$cur_val = self::get_cur_val( $selected );$/;"	v
cur_val	scb/Forms.php	/^	protected static $cur_val;$/;"	v
dashboard_settings_box	admin/admin.php	/^	function dashboard_settings_box() {$/;"	f
dashboard_settings_handler	admin/admin.php	/^	function dashboard_settings_handler() {$/;"	f
data	scb/Options.php	/^		$data = $this->get();$/;"	v
data	scb/Options.php	/^		$data = array_merge( $this->defaults, $data );$/;"	v
data	scb/Options.php	/^		$data = get_option( $this->key, array() );$/;"	v
debug	scb/Hooks.php	/^	public static function debug( $class ) {$/;"	f
default	scb/Forms.php	/^	private static function get_cur_val( $default = null ) {$/;"	v
default_css	admin/admin.php	/^	function default_css() {$/;"	f
default_css	scb/BoxesPage.php	/^	function default_css() {$/;"	f
defaults	scb/Options.php	/^		$this->defaults = $defaults;$/;"	v
defaults	scb/Options.php	/^	protected $defaults;	\/\/ the default values$/;"	v
defaults	scb/Options.php	/^	public function __construct( $key, $file, $defaults = array() ) {$/;"	v
defaults	scb/Widget.php	/^	protected $defaults = array();$/;"	v
delay	scb/Cron.php	/^	function do_once( $delay = 0, $args = null ) {$/;"	v
delayed_activation	scb/load.php	/^	static function delayed_activation( $plugin ) {$/;"	f
delete	scb/Options.php	/^	public function delete() {$/;"	f
desc	scb/Forms.php	/^			$desc = str_replace( '[]', '', $value );$/;"	v
desc_pos	scb/Forms.php	/^			$desc_pos = 'after';$/;"	v
dir	admin-customization.php	/^	$dir = dirname(__FILE__);$/;"	v
do_callbacks	scb/load.php	/^	static function load( $do_callbacks = true ) {$/;"	v
do_now	scb/Cron.php	/^	function do_now( $args = null ) {$/;"	f
do_once	scb/Cron.php	/^	function do_once( $delay = 0, $args = null ) {$/;"	f
do_scripts	scb/Util.php	/^	static function do_scripts( $handles ) {$/;"	f
do_styles	scb/Util.php	/^	static function do_styles( $handles ) {$/;"	f
echo_error	admin/admin.php	/^     private function verify_file_existence( $file, $echo_error=false ) {$/;"	v
field	scb/Options.php	/^	public function get( $field = '' ) {$/;"	v
field	scb/Options.php	/^	public function get_defaults( $field = '' ) {$/;"	v
field	scb/Util.php	/^	return $wpdb->update( $wpdb->posts, array( $field => $value ), array( 'ID' => $post_id ) );$/;"	v
file	scb/AdminPage.php	/^		$this->file = $file;$/;"	v
file	scb/Widget.php	/^	static function init( $class, $file = '', $base = '' ) {$/;"	v
file	scb/load.php	/^		$file = key( self::$candidates );$/;"	v
file	scb/load.php	/^		foreach ( self::$callbacks as $file => $callback ) {$/;"	v
file_url	admin/admin.php	/^                $file_url = site_url( 'wp-content\/' . $file );$/;"	v
finish	scb/Util.php	/^		$finish = substr( $str, $i );$/;"	v
font_size	admin/admin.php	/^        $font_size = ereg_replace( "[^0-9]", "", @$_POST['admin_logo_font_size'] );$/;"	v
font_size	core.php	/^        $font_size = self::$options->admin_logo_font_size;$/;"	v
form	scb/AdminPage.php	/^		var $form = $submit.parents( 'form' );$/;"	v
form	scb/AdminPage.php	/^	function form( $rows, $formdata = array() ) {$/;"	f
form	scb/Forms.php	/^	static function form( $inputs, $formdata = NULL, $nonce ) {$/;"	f
form_handler	scb/AdminPage.php	/^	function form_handler() {$/;"	f
form_handler	scb/BoxesPage.php	/^	function form_handler() {$/;"	f
form_table	scb/AdminPage.php	/^	function form_table( $rows, $formdata = array() ) {$/;"	f
form_table	scb/Forms.php	/^	static function form_table( $rows, $formdata = NULL ) {$/;"	f
form_table_wrap	scb/AdminPage.php	/^	function form_table_wrap( $content ) {$/;"	f
form_table_wrap	scb/Forms.php	/^	static function form_table_wrap( $content, $nonce = 'update_options' ) {$/;"	f
form_wrap	scb/AdminPage.php	/^	function form_wrap( $content, $submit_button = true ) {$/;"	f
form_wrap	scb/Forms.php	/^	static function form_wrap( $content, $nonce = 'update_options' ) {$/;"	f
formdata	scb/AdminPage.php	/^			$formdata = $this->options->get();$/;"	v
formdata	scb/AdminPage.php	/^			$formdata = array( $name => $value );$/;"	v
formdata	scb/AdminPage.php	/^	function form( $rows, $formdata = array() ) {$/;"	v
formdata	scb/AdminPage.php	/^	function form_table( $rows, $formdata = array() ) {$/;"	v
formdata	scb/AdminPage.php	/^	function input( $args, $formdata = array() ) {$/;"	v
formdata	scb/AdminPage.php	/^	function table( $rows, $formdata = array() ) {$/;"	v
formdata	scb/AdminPage.php	/^	function table_row( $args, $formdata = array() ) {$/;"	v
formdata	scb/Forms.php	/^	static function form( $inputs, $formdata = NULL, $nonce ) {$/;"	v
formdata	scb/Forms.php	/^	static function form_table( $rows, $formdata = NULL ) {$/;"	v
formdata	scb/Forms.php	/^	static function input( $args, $formdata = array() ) {$/;"	v
formdata	scb/Forms.php	/^	static function table( $rows, $formdata = NULL ) {$/;"	v
formdata	scb/Forms.php	/^	static function table_row( $args, $formdata = NULL ) {$/;"	v
formdata	scb/Widget.php	/^	protected function input( $args, $formdata = array() ) {$/;"	v
fpath	scb/load.php	/^			$fpath = $path . substr( $class_name, 3 ) . '.php';$/;"	v
full_table_name	scb/Table.php	/^		$full_table_name = $wpdb->prefix . $this->name;$/;"	v
func	scb/AdminPage.php	/^			$func = 'add_' . $toplevel . '_page';$/;"	v
func	scb/Hooks.php	/^		$func = " array( $class, '$callback[1]' )";$/;"	v
general_settings_box	admin/admin.php	/^	function general_settings_box() {$/;"	f
general_settings_handler	admin/admin.php	/^	function general_settings_handler() {$/;"	f
get	scb/Options.php	/^	public function get( $field = '' ) {$/;"	f
get_cur_val	scb/Forms.php	/^	private static function get_cur_val( $default = null ) {$/;"	f
get_current_url	scb/Util.php	/^	static function get_current_url() {$/;"	f
get_defaults	scb/Options.php	/^	public function get_defaults( $field = '' ) {$/;"	f
get_info	scb/load.php	/^	static function get_info() {$/;"	f
get_key	scb/Options.php	/^	public function get_key() {$/;"	f
get_name	scb/Forms.php	/^	private static function get_name( $name ) {$/;"	f
get_value	scb/Forms.php	/^	private static function get_value( $name, $value ) {$/;"	f
handler	scb/BoxesPage.php	/^			$handler = $box[0] . '_handler';$/;"	v
hide2	scb/BoxesPage.php	/^					$hide2 = $hide3 = $hide4 = 'display:none;';$/;"	v
hide2	scb/BoxesPage.php	/^			$hide2 = $hide3 = $hide4 = '';$/;"	v
hide3	scb/BoxesPage.php	/^					$hide3 = $hide4 = 'display:none;';$/;"	v
hide4	scb/BoxesPage.php	/^					$hide4 = 'display:none;';$/;"	v
hook	scb/BoxesPage.php	/^		$hook = str_replace( '-', '', $this->pagehook );$/;"	v
hook	scb/Cron.php	/^				if ( $hook == $name )$/;"	v
hook	scb/Cron.php	/^			$this->hook = $action;$/;"	v
hook	scb/Cron.php	/^			$this->hook = self::_callback_to_string( $callback );$/;"	v
hook	scb/Cron.php	/^			$this->hook = self::_callback_to_string( array( $this, 'callback' ) );$/;"	v
hook	scb/Cron.php	/^			foreach ( $hooks as $hook => $args )$/;"	v
hook	scb/Cron.php	/^	protected $hook;$/;"	v
hook	scb/Hooks.php	/^				$hook = preg_match( '\/@hook:?\\s+(.+)\/', $comment, $matches ) ? $matches[1] : $method->name;$/;"	v
html	scb/Util.php	/^function html( $tag ) {$/;"	f
html_link	scb/Util.php	/^function html_link( $url, $title = '' ) {$/;"	f
i	scb/Util.php	/^		$i = strpos( $str, $delim );$/;"	v
init	core.php	/^	static function init( $options ) {$/;"	f
init	scb/Widget.php	/^	static function init( $class, $file = '', $base = '' ) {$/;"	f
init	scb/load.php	/^	static function init( $callback = '' ) {$/;"	f
input	scb/AdminPage.php	/^	function input( $args, $formdata = array() ) {$/;"	f
input	scb/Forms.php	/^			$input = html( 'input', $extra );$/;"	v
input	scb/Forms.php	/^			$input = html( 'textarea', $extra, esc_textarea( $value ) );$/;"	v
input	scb/Forms.php	/^		$input = html( 'select', $extra, $opts );$/;"	v
input	scb/Forms.php	/^	static function input( $args, $formdata = array() ) {$/;"	f
input	scb/Widget.php	/^	protected function input( $args, $formdata = array() ) {$/;"	f
input_args	scb/AdminPage.php	/^		$input_args = array( 'type' => 'submit',$/;"	v
install	scb/Table.php	/^	function install() {$/;"	f
instance	scb/Widget.php	/^		$instance = wp_parse_args( $instance, $this->defaults );$/;"	v
interval	scb/Cron.php	/^			$this->interval = $interval;$/;"	v
interval	scb/Cron.php	/^	protected $interval;$/;"	v
is_associative	scb/Forms.php	/^	private static function is_associative( $array ) {$/;"	f
is_logo_hidden	core.php	/^            $is_logo_hidden = true;$/;"	v
is_logo_hidden	core.php	/^        $is_logo_hidden = false;$/;"	v
js_wrap	scb/AdminPage.php	/^	function js_wrap( $string ) {$/;"	f
key	scb/Forms.php	/^		foreach ( $args as $key => &$val )$/;"	v
key	scb/Options.php	/^		$this->key = $key;$/;"	v
key	scb/Options.php	/^	protected $key;		\/\/ the option name$/;"	v
key	scb/Util.php	/^		foreach ( $attributes as $key => $value ) {$/;"	v
keys	scb/BoxesPage.php	/^		$keys = '( ' . implode( ', ', $keys ) . ' )';$/;"	v
keys	scb/Forms.php	/^		$keys = array_keys( $array );$/;"	v
label	scb/Forms.php	/^				case 'after': $label = self::token . ' ' . $desc;$/;"	v
label	scb/Forms.php	/^				case 'before': $label = $desc . ' ' . self::token; break;$/;"	v
label	scb/Forms.php	/^			$label = $desc;$/;"	v
label	scb/Forms.php	/^		$label = '';$/;"	v
label	scb/Forms.php	/^		$label = trim( str_replace( self::token, $input, $label ) );$/;"	v
load	scb/load.php	/^	static function load( $do_callbacks = true ) {$/;"	f
loaded	scb/load.php	/^	private static $loaded;$/;"	v
logo_mark	core.php	/^            $logo_mark = jQuery('#header-logo');$/;"	v
logo_path	core.php	/^		  $logo_path = site_url() . '\/wp-content\/' . self::$options->login_logo;$/;"	v
logo_path	core.php	/^                $logo_path = site_url( 'wp-content\/' . self::$options->admin_logo );$/;"	v
logo_size	core.php	/^		  $logo_size = getimagesize( $logo_path );$/;"	v
logo_size	core.php	/^                $logo_size = getimagesize( $logo_path );$/;"	v
logo_size	core.php	/^        $logo_size = array( 16, 16 );$/;"	v
margins	core.php	/^        $margins = array( 7, 7 );$/;"	v
msg	scb/AdminPage.php	/^			$msg = __( 'Settings <strong>saved<\/strong>.', $this->textdomain );$/;"	v
msg	scb/AdminPage.php	/^			var $msg = $( response ).hide().insertAfter( $( '.wrap h2' ) );$/;"	v
msg	scb/AdminPage.php	/^	function admin_msg( $msg = '', $class = "updated" ) {$/;"	v
name	admin/admin.php	/^		foreach ( $checkboxes as $name => $args )$/;"	v
name	scb/AdminPage.php	/^			$name = $this->option_name;$/;"	v
name	scb/BoxesPage.php	/^				$name = $this->_increment( $name );$/;"	v
name	scb/Forms.php	/^		$name = (array) $name;$/;"	v
name	scb/Table.php	/^		$this->name = $name;$/;"	v
name	scb/Table.php	/^	protected $name;$/;"	v
name_str	scb/Forms.php	/^		$name_str = array_shift( $name );$/;"	v
new_data	scb/AdminPage.php	/^		$new_data = $this->validate( $new_data, $this->options->get() );$/;"	v
new_data	scb/AdminPage.php	/^		$new_data = stripslashes_deep( $new_data );$/;"	v
new_data	scb/AdminPage.php	/^		$new_data = wp_array_slice_assoc( $_POST, array_keys( $this->options->get_defaults() ) );$/;"	v
new_formdata	scb/Widget.php	/^		$new_formdata = array();$/;"	v
new_names	scb/Widget.php	/^		$new_names = array_keys( $new_formdata );$/;"	v
newdata	scb/Options.php	/^			$newdata = $field;$/;"	v
newdata	scb/Options.php	/^			$newdata = $this->_clean( $newdata );$/;"	v
newdata	scb/Options.php	/^			$newdata = array( $field => $value );$/;"	v
nonce	scb/AdminPage.php	/^			$this->nonce = $this->args['page_slug'];$/;"	v
nonce	scb/Forms.php	/^	static function form_table_wrap( $content, $nonce = 'update_options' ) {$/;"	v
nonce	scb/Forms.php	/^	static function form_wrap( $content, $nonce = 'update_options' ) {$/;"	v
objects_to_assoc	scb/Util.php	/^	static function objects_to_assoc( $objects, $key, $value ) {$/;"	f
old	scb/Forms.php	/^			$old = $key . 's';$/;"	v
option_init	scb/AdminPage.php	/^	function option_init() {$/;"	f
option_name	scb/AdminPage.php	/^	protected $option_name;$/;"	v
options	admin-customization.php	/^	$options = new scbOptions( 'admin-customization', __FILE__, array($/;"	v
options	core.php	/^	static $options;$/;"	v
options	scb/AdminPage.php	/^			$this->options = $options;$/;"	v
options	scb/AdminPage.php	/^	function __construct( $file, $options = NULL ) {$/;"	v
options	scb/AdminPage.php	/^	protected $options;$/;"	v
options	scb/AdminPage.php	/^	static function register( $class, $file, $options = null ) {$/;"	v
options	scb/BoxesPage.php	/^	function __construct( $file, $options = null ) {$/;"	v
options	scb/Forms.php	/^		$options = array();$/;"	v
opts	scb/Forms.php	/^		$opts = '';$/;"	v
output	admin/admin.php	/^		$output = $this->table( array($/;"	v
output	admin/admin.php	/^		$output = '';$/;"	v
output	admin/admin.php	/^		$output = '<p class="updated">' . __( 'To update this list of widgets you must first visit the <a href="\/wp-admin" target="_blank">Dashboard<\/a>.', $this->textdomain ) . '<\/p>' .$/;"	v
output	scb/AdminPage.php	/^		$output = "<p class='submit'>\\n" . scbForms::input( $input_args ) . "<\/p>\\n";$/;"	v
output	scb/AdminPage.php	/^		$output = $this->form_table_wrap( $output );$/;"	v
output	scb/AdminPage.php	/^		$output = $this->form_wrap( $output );$/;"	v
output	scb/AdminPage.php	/^		$output = $this->table_wrap( $content );$/;"	v
output	scb/AdminPage.php	/^		$output = $this->table_wrap( $output );$/;"	v
output	scb/AdminPage.php	/^		$output = '';$/;"	v
output	scb/Forms.php	/^			$output = $input;$/;"	v
output	scb/Forms.php	/^			$output = html( 'label', $label );$/;"	v
output	scb/Forms.php	/^		$output = "\\n<form method='post' action=''>\\n";$/;"	v
output	scb/Forms.php	/^		$output = "\\n<table class='form-table'>\\n" . $content . "\\n<\/table>\\n";$/;"	v
output	scb/Forms.php	/^		$output = '';$/;"	v
output	scb/Forms.php	/^		$output = self::form_table_wrap( $output );$/;"	v
output	scb/Forms.php	/^		$output = self::form_wrap( $output, $nonce );$/;"	v
output	scb/Forms.php	/^		$output = self::table_wrap( $content );$/;"	v
output	scb/Forms.php	/^		$output = self::table_wrap( $output );$/;"	v
page_content	scb/AdminPage.php	/^	abstract function page_content();$/;"	f
page_content	scb/BoxesPage.php	/^	function page_content() {$/;"	f
page_footer	scb/AdminPage.php	/^	function page_footer() {$/;"	f
page_footer	scb/BoxesPage.php	/^	function page_footer() {$/;"	f
page_head	scb/AdminPage.php	/^	function page_head(){}$/;"	f
page_header	admin/admin.php	/^    function page_header() {$/;"	f
page_header	scb/AdminPage.php	/^	function page_header() {$/;"	f
page_help	scb/AdminPage.php	/^	function page_help(){}$/;"	f
page_init	scb/AdminPage.php	/^	function page_init() {$/;"	f
page_init	scb/BoxesPage.php	/^	function page_init() {$/;"	f
pagehook	scb/AdminPage.php	/^			$this->pagehook = $func( $page_title, $menu_title, $capability, $page_slug, array( $this, '_page_content_hook' ), $icon_url );$/;"	v
pagehook	scb/AdminPage.php	/^			$this->pagehook = add_submenu_page( $parent, $page_title, $menu_title, $capability, $page_slug, array( $this, '_page_content_hook' ) );$/;"	v
pagehook	scb/AdminPage.php	/^	protected $pagehook;$/;"	v
parts	scb/BoxesPage.php	/^		$parts = explode( '-', $name );$/;"	v
path	scb/load.php	/^		$path = dirname( $file ) . '\/';$/;"	v
plugin_dir	scb/load.php	/^		$plugin_dir = dirname( $plugin );$/;"	v
plugin_url	scb/AdminPage.php	/^		$this->plugin_url = plugin_dir_url( $file );$/;"	v
plugin_url	scb/AdminPage.php	/^	protected $plugin_url;$/;"	v
post_id	scb/Util.php	/^	$post_id = absint( $post_id );$/;"	v
prev	scb/AdminPage.php	/^			var $prev = $( '.wrap > .updated, .wrap > .error' );$/;"	v
priority	core.php	/^				foreach ( $data as $priority=>$data ) {$/;"	v
priority	scb/BoxesPage.php	/^				$priority = 'default';$/;"	v
priority	scb/Hooks.php	/^				$priority = preg_match( '\/@priority:?\\s+([0-9]+)\/', $comment, $matches ) ? $matches[1] : 10;$/;"	v
r	scb/Options.php	/^		$r = array();$/;"	v
r	scb/Util.php	/^		$r = array();$/;"	v
really_clear_scheduled_hook	scb/Cron.php	/^	protected static function really_clear_scheduled_hook( $name ) {$/;"	f
reflection	scb/Hooks.php	/^		$reflection = new ReflectionClass( $class );$/;"	v
register	scb/AdminPage.php	/^	static function register( $class, $file, $options = null ) {$/;"	f
registered	scb/AdminPage.php	/^	private static $registered = array();$/;"	v
registered	scb/BoxesPage.php	/^		$registered = array();$/;"	v
remove	scb/AdminPage.php	/^	static function remove( $class ) {$/;"	f
remove	scb/Hooks.php	/^	public static function remove( $class ) {$/;"	f
replace	scb/AdminPage.php	/^	static function replace( $old_class, $new_class ) {$/;"	f
reschedule	scb/Cron.php	/^	function reschedule( $args ) {$/;"	f
reset	scb/Cron.php	/^	function reset() {$/;"	f
reset	scb/Options.php	/^	public function reset() {$/;"	f
row_wrap	scb/AdminPage.php	/^	function row_wrap( $title, $content ) {$/;"	f
row_wrap	scb/Forms.php	/^	static function row_wrap( $title, $content ) {$/;"	f
scbAdminPage	scb/AdminPage.php	/^abstract class scbAdminPage {$/;"	c
scbBoxesPage	scb/BoxesPage.php	/^abstract class scbBoxesPage extends scbAdminPage {$/;"	c
scbCron	scb/Cron.php	/^class scbCron {$/;"	c
scbForms	scb/Forms.php	/^class scbForms {$/;"	c
scbHooks	scb/Hooks.php	/^class scbHooks {$/;"	c
scbLoad4	scb/load.php	/^class scbLoad4 {$/;"	c
scbOptions	scb/Options.php	/^class scbOptions {$/;"	c
scbTable	scb/Table.php	/^class scbTable {$/;"	c
scbUtil	scb/Util.php	/^class scbUtil {$/;"	c
scbWidget	scb/Widget.php	/^abstract class scbWidget extends WP_Widget {$/;"	c
scb_get_field_name	scb/Widget.php	/^	private function scb_get_field_name( $name ) {$/;"	f
scb_init	scb/load.php	/^function scb_init( $callback = '' ) {$/;"	f
scb_widgets	scb/Widget.php	/^	private static $scb_widgets = array();$/;"	v
schedule	scb/Cron.php	/^			$this->schedule = $interval . 'secs';$/;"	v
schedule	scb/Cron.php	/^			$this->schedule = $schedule;$/;"	v
schedule	scb/Cron.php	/^	protected $schedule;$/;"	v
schedule	scb/Cron.php	/^	protected function schedule() {$/;"	f
screen	scb/AdminPage.php	/^			$screen = $screen->id;$/;"	v
screen	scb/AdminPage.php	/^		if ( $screen == $this->pagehook && $actual_help )$/;"	v
selected	scb/Forms.php	/^			$selected = key( $value );	\/\/ radio buttons should always have one option selected$/;"	v
set	scb/Options.php	/^	public function set( $field, $value = '' ) {$/;"	f
set_post_field	scb/Util.php	/^function set_post_field( $field, $value, $post_id ) {$/;"	f
setup	admin/admin.php	/^	function setup() {$/;"	f
setup	scb/AdminPage.php	/^	function setup(){}$/;"	f
site_url	core.php	/^            $site_url = jQuery('<a href="<?php echo site_url(); ?>"><\/a>');$/;"	v
spinner	scb/AdminPage.php	/^	var $spinner = $( new Image() ).attr( 'src', '<?php echo admin_url( "images\/wpspin_light.gif" ); ?>' );$/;"	v
split	scb/Widget.php	/^		if ( $split = scbUtil::split_at( '[', $name ) )$/;"	v
split_at	scb/Util.php	/^	static function split_at( $delim, $str ) {$/;"	f
start	scb/Util.php	/^		$start = substr( $str, 0, $i );$/;"	v
str	scb/Cron.php	/^			$str = $callback;$/;"	v
str	scb/Cron.php	/^			$str = $callback[0] . '::' . $callback[1];$/;"	v
str	scb/Cron.php	/^			$str = get_class( $callback[0] ) . '_' . $callback[1];$/;"	v
style_preferences_box	admin/admin.php	/^	function style_preferences_box() {$/;"	f
style_preferences_handler	admin/admin.php	/^	function style_preferences_handler() {$/;"	f
styles	core.php	/^		$styles = array();$/;"	v
submit	scb/AdminPage.php	/^		var $submit = $( this );$/;"	v
submit_button	scb/AdminPage.php	/^	function form_wrap( $content, $submit_button = true ) {$/;"	v
submit_button	scb/AdminPage.php	/^	function submit_button( $value = '', $action = 'action', $class = "button" ) {$/;"	f
table	admin/admin.php	/^		$table =$/;"	v
table	scb/AdminPage.php	/^	function table( $rows, $formdata = array() ) {$/;"	f
table	scb/Forms.php	/^	static function table( $rows, $formdata = NULL ) {$/;"	f
table_row	scb/AdminPage.php	/^	function table_row( $args, $formdata = array() ) {$/;"	f
table_row	scb/Forms.php	/^	static function table_row( $args, $formdata = NULL ) {$/;"	f
table_wrap	scb/AdminPage.php	/^	function table_wrap( $content ) {$/;"	f
table_wrap	scb/Forms.php	/^	static function table_wrap( $content ) {$/;"	f
tag	scb/Util.php	/^	$tag = array_shift( $args );$/;"	v
tbody	admin/admin.php	/^		$tbody = '';$/;"	v
textdomain	admin-customization.php	/^	$textdomain = 'admin-customization';$/;"	v
textdomain	admin/admin.php	/^		$this->textdomain = 'admin-customization';$/;"	v
textdomain	scb/AdminPage.php	/^	protected $textdomain;$/;"	v
thead	admin/admin.php	/^		$thead =$/;"	v
this_spinner	scb/AdminPage.php	/^		var $this_spinner = $spinner.clone();$/;"	v
time	scb/Cron.php	/^			$this->time = $time;$/;"	v
time	scb/Cron.php	/^			$this->time = time();$/;"	v
time	scb/Cron.php	/^		$this->time = $time;$/;"	v
time	scb/Cron.php	/^	protected $time;$/;"	v
timestamp	scb/Cron.php	/^		foreach ( $crons as $timestamp => $hooks ) {$/;"	v
title	scb/BoxesPage.php	/^				$title = ucfirst( $name );$/;"	v
title	scb/Util.php	/^		$title = $url;$/;"	v
title	scb/Util.php	/^function html_link( $url, $title = '' ) {$/;"	v
title	scb/Widget.php	/^		$title = apply_filters( 'widget_title', isset( $instance['title'] ) ? $instance['title'] : '', $instance, $this->id_base );$/;"	v
to	scb/Util.php	/^	\/\/ Apply a function to each element of a ( nested ) array recursively$/;"	f
tree	scb/AdminPage.php	/^			$tree = ( array ) $args['name_tree'];$/;"	v
uninstall	scb/BoxesPage.php	/^	function uninstall() {$/;"	f
uninstall	scb/Table.php	/^	function uninstall() {$/;"	f
unschedule	scb/Cron.php	/^	function unschedule() {$/;"	f
update	scb/Options.php	/^	public function update( $newdata, $clean = true ) {$/;"	f
upgrade_method	scb/Table.php	/^		$this->upgrade_method = $upgrade_method;$/;"	v
upgrade_method	scb/Table.php	/^	function __construct( $name, $file, $columns, $upgrade_method = 'dbDelta' ) {$/;"	v
upgrade_method	scb/Table.php	/^	protected $upgrade_method;$/;"	v
url	scb/AdminPage.php	/^		$url = add_query_arg( 'page', $this->args['page_slug'], admin_url( $this->args['parent'] ) );$/;"	v
val	scb/Util.php	/^			$val = "'" . esc_sql( trim( $val ) ) . "'";$/;"	v
val	scb/Util.php	/^		$val = call_user_func( $callback, $val );$/;"	v
validate	scb/AdminPage.php	/^	function validate( $new_data, $old_data ) {$/;"	f
value	scb/AdminPage.php	/^				$value = $value[$key];$/;"	v
value	scb/AdminPage.php	/^				$value = __( 'Save Changes', $this->textdomain );$/;"	v
value	scb/AdminPage.php	/^			$value = $formdata;$/;"	v
value	scb/AdminPage.php	/^	function submit_button( $value = '', $action = 'action', $class = "button" ) {$/;"	v
value	scb/Forms.php	/^				$value = array_combine( $value, $args['desc'] );	\/\/ back-compat$/;"	v
value	scb/Forms.php	/^				$value = array_combine( $value, $value );$/;"	v
value	scb/Forms.php	/^				'checked' => ( (string) $value == (string) $cur_val ),$/;"	v
value	scb/Forms.php	/^				'selected' => ( (string) $value == (string) $cur_val ),$/;"	v
value	scb/Forms.php	/^			$value = $value[$key];$/;"	v
value	scb/Forms.php	/^			$value = self::get_cur_val( '' );$/;"	v
value	scb/Forms.php	/^		$value =& $args['value'];$/;"	v
value	scb/Forms.php	/^		foreach ( $value as $value => $title ) {$/;"	v
value	scb/Options.php	/^	public function set( $field, $value = '' ) {$/;"	v
value	scb/Util.php	/^				$value = $key;$/;"	v
value	scb/Util.php	/^	$value = sanitize_post_field( $field, $value, $post_id, 'db' );$/;"	v
verify_file_existence	admin/admin.php	/^     private function verify_file_existence( $file, $echo_error=false ) {$/;"	f
widget	core.php	/^					foreach( $data as $widget=>$data ) {$/;"	v
widget	scb/Widget.php	/^	function widget( $args, $instance ) {$/;"	f
wp_filter_id	scb/Options.php	/^	public $wp_filter_id;	\/\/ used by WP hooks$/;"	v
wp_scripts	scb/Util.php	/^			$wp_scripts = new WP_Scripts();$/;"	v
wp_styles	scb/Util.php	/^			$wp_styles = new WP_Styles();$/;"	v
